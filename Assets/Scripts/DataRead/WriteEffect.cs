using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using TMPro;

public class WriteEffect : MonoBehaviour
{
    //변경할 변수
    public float delay;
    public float Skip_delay;
    public int cnt;

    //타이핑효과 변수
    public string[] fulltext;
   public int dialog_cnt;
    string currentText;

    //타이핑확인 변수
    public bool text_exit;
    public bool text_full;
    public bool text_cut;
    public int textArrange;
    public TextMeshProUGUI[] writeText;

    public PasswordButton passwordButton;

    public GameObject content;
    public ScrollRect scrollRect;
    private float scrollRextPosY;

    //시작과 동시에 타이핑시작
    void Start()
    {
        textArrange = 0;
        Get_Typing(dialog_cnt, fulltext);
        // writeText = GetComponent<TextMeshProUGUI>();
        scrollRextPosY = 0f;
    }


    //모든 텍스트 호출완료시 탈출
    void Update()
    {
        if (text_exit == true)
        {
          
            gameObject.SetActive(false);
        }

    }

    //다음버튼함수
    public void End_Typing()
    {

            //다음 텍스트 호출
            if (text_full == true)
            {
            if (textArrange >= 2)
            {
                scrollRextPosY += 120;
                scrollRect.content.localPosition = new Vector2(0, scrollRextPosY);
            }
            cnt++;
                text_full = false;
                text_cut = false;
                StartCoroutine(ShowText(fulltext));
            }
            //텍스트 타이핑 생략
            else
            {
                text_cut = true;
            }
        
    }

    //텍스트 시작호출
    public void Get_Typing(int _dialog_cnt, string[] _fullText)
    {
        //재사용을 위한 변수초기화
        text_exit = false;
        text_full = false;
        text_cut = false;
        cnt = 0;

        //변수 불러오기
        dialog_cnt = _dialog_cnt;
        fulltext = new string[dialog_cnt];
        fulltext = _fullText;

        //타이핑 코루틴시작
        StartCoroutine(ShowText(fulltext));
    }

    IEnumerator ShowText(string[] _fullText)
    {
        yield return new WaitForSeconds(delay);
        //모든텍스트 종료
        if (cnt >= dialog_cnt)
        {
            text_exit = true;
            
            StopCoroutine("showText");
        }
        else
        {
            //기존문구clear
            currentText = "";
            //타이핑 시작
            for (int i = 0; i < _fullText[cnt].Length; i++)
            {
                //타이핑중도탈출
                if (text_cut == true)
                {
                    break;
                }
                //단어하나씩출력
                currentText = _fullText[cnt].Substring(0, i + 1);
                writeText[textArrange].text = currentText;
                yield return new WaitForSeconds(delay);
            }
            //탈출시 모든 문자출력
            Debug.Log("Typing 종료");
            writeText[textArrange].text = _fullText[cnt];
            yield return new WaitForSeconds(Skip_delay);

            //스킵_지연후 종료
            Debug.Log("Enter 대기");
            text_full = true;
            if (cnt == dialog_cnt - 1)
            {
                GameSystem.instance.TextEnd = true;
            }
        }
        textArrange += 1;
    }
}
